security:
    access_denied_url:    null # Example: /foo/error403
    session_fixation_strategy: migrate # One of "none"; "migrate"; "invalidate"
    hide_user_not_found:  true
    always_authenticate_before_granting: false
    erase_credentials:    true
    access_decision_manager:
        strategy:             affirmative # One of "affirmative"; "consensus"; "unanimous"
        allow_if_all_abstain: false
        allow_if_equal_granted_denied: true
    acl:

        # any name configured in doctrine.dbal section
        connection:           null
        cache:
            id:                   ~
            prefix:               sf2_acl_
        provider:             ~
        tables:
            class:                acl_classes
            entry:                acl_entries
            object_identity:      acl_object_identities
            object_identity_ancestors: acl_object_identity_ancestors
            security_identity:    acl_security_identities
        voter:
            allow_if_object_identity_unavailable: true
    encoders:

        # Examples:
        AppBundle\Entity\User1: bcrypt
        AppBundle\Entity\User2:
            algorithm:           bcrypt
            cost:                13

        # Prototype
        class:
            algorithm:            ~

            # Name of hashing algorithm for PBKDF2 (i.e. sha256, sha512, etc..) See hash_algos() for a list of supported algorithms.
            hash_algorithm:       sha512
            key_length:           40
            ignore_case:          false
            encode_as_base64:     true
            iterations:           5000
            cost:                 13
            id:                   ~
    providers:            # Required

        # Examples:
        my_memory_provider:
            memory:
                users:
                    foo:
                        password:            foo
                        roles:               ROLE_USER
                    bar:
                        password:            bar
                        roles:               [ROLE_USER, ROLE_ADMIN]
        my_entity_provider:
            entity:
                class:               SecurityBundle:User
                property:            username

        # Prototype
        name:
            id:                   ~
            chain:
                providers:            []
            memory:
                users:

                    # Prototype
                    name:
                        password:             598e2243708f13.71717201
                        roles:                []
            ldap:
                service:              ldap # Required
                base_dn:              ~ # Required
                search_dn:            ~
                search_password:      ~
                default_roles:        []
                uid_key:              sAMAccountName
                filter:               '({uid_key}={username})'
                password_attribute:   null
            entity:
                class:                ~ # Required
                property:             null
                manager_name:         null
    firewalls:            # Required

        # Prototype
        name:
            pattern:              ~
            host:                 ~
            methods:              []
            security:             true

            # The UserChecker to use when authenticating users in this firewall.
            user_checker:         security.user_checker
            request_matcher:      ~
            access_denied_url:    ~
            access_denied_handler: ~
            entry_point:          ~
            provider:             ~
            stateless:            false
            context:              ~
            logout:
                csrf_parameter:       _csrf_token
                csrf_token_generator: ~
                csrf_token_id:        logout
                path:                 /logout
                target:               /
                success_handler:      ~
                invalidate_session:   true
                delete_cookies:

                    # Prototype
                    name:
                        path:                 null
                        domain:               null
                handlers:             []
            anonymous:
                secret:               598e2243709847.94714457
            switch_user:
                provider:             ~
                parameter:            _switch_user
                role:                 ROLE_ALLOWED_TO_SWITCH
            x509:
                provider:             ~
                user:                 SSL_CLIENT_S_DN_Email
                credentials:          SSL_CLIENT_S_DN
            remote_user:
                provider:             ~
                user:                 REMOTE_USER
            simple_preauth:
                provider:             ~
                authenticator:        ~
            guard:

                # A key from the "providers" section of your security config, in case your user provider is different than the firewall
                provider:             ~

                # A service id (of one of your authenticators) whose start() method should be called when an anonymous user hits a page that requires authentication
                entry_point:          null

                # An array of service ids for all of your "authenticators"
                authenticators:       []
            form_login:
                provider:             ~
                remember_me:          true
                success_handler:      ~
                failure_handler:      ~
                check_path:           /login_check
                use_forward:          false
                require_previous_session: true
                username_parameter:   _username
                password_parameter:   _password
                csrf_parameter:       _csrf_token
                csrf_token_id:        authenticate
                post_only:            true
                always_use_default_target_path: false
                default_target_path:  /
                login_path:           /login
                target_path_parameter: _target_path
                use_referer:          false
                failure_path:         null
                failure_forward:      false
                failure_path_parameter: _failure_path
                csrf_token_generator: ~
            form_login_ldap:
                provider:             ~
                remember_me:          true
                success_handler:      ~
                failure_handler:      ~
                check_path:           /login_check
                use_forward:          false
                require_previous_session: true
                username_parameter:   _username
                password_parameter:   _password
                csrf_parameter:       _csrf_token
                csrf_token_id:        authenticate
                post_only:            true
                always_use_default_target_path: false
                default_target_path:  /
                login_path:           /login
                target_path_parameter: _target_path
                use_referer:          false
                failure_path:         null
                failure_forward:      false
                failure_path_parameter: _failure_path
                csrf_token_generator: ~
                service:              ldap
                dn_string:            '{username}'
                query_string:         ~
            json_login:
                provider:             ~
                remember_me:          true
                success_handler:      ~
                failure_handler:      ~
                check_path:           /login_check
                use_forward:          false
                require_previous_session: false
                username_path:        username
                password_path:        password
            simple_form:
                provider:             ~
                remember_me:          true
                success_handler:      ~
                failure_handler:      ~
                check_path:           /login_check
                use_forward:          false
                require_previous_session: true
                username_parameter:   _username
                password_parameter:   _password
                csrf_parameter:       _csrf_token
                csrf_token_id:        authenticate
                post_only:            true
                authenticator:        ~
                always_use_default_target_path: false
                default_target_path:  /
                login_path:           /login
                target_path_parameter: _target_path
                use_referer:          false
                failure_path:         null
                failure_forward:      false
                failure_path_parameter: _failure_path
                csrf_token_generator: ~
            http_basic:
                provider:             ~
                realm:                'Secured Area'
            http_basic_ldap:
                provider:             ~
                realm:                'Secured Area'
                service:              ldap
                dn_string:            '{username}'
                query_string:         ~
            http_digest:
                provider:             ~
                realm:                'Secured Area'
                secret:               ~ # Required
            remember_me:
                secret:               ~ # Required
                token_provider:       ~
                user_providers:       []
                catch_exceptions:     true
                name:                 REMEMBERME
                lifetime:             31536000
                path:                 /
                domain:               null
                secure:               false
                httponly:             true
                always_remember_me:   false
                remember_me_parameter: _remember_me
    access_control:

        # Prototype
        -
            requires_channel:     null

            # use the urldecoded format
            path:                 null # Example: ^/path to resource/
            host:                 null
            ips:                  []
            methods:              []
            allow_if:             null
            roles:                []
    role_hierarchy:

        # Prototype
        id:                   []

